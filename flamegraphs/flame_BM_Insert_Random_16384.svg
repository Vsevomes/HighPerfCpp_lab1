<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="630.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >BM_Insert_Random_16384</text>
<text id="details" x="10.00" y="613" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="613" > </text>
<g id="frames">
<g >
<title>x64_sys_call (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="501" width="5.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1089.88" y="511.5" ></text>
</g>
<g >
<title>update_process_times (12,440,883 samples, 0.51%)</title><rect x="805.1" y="85" width="6.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="808.06" y="95.5" ></text>
</g>
<g >
<title>virtual thunk to std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ofstream (129,486,577 samples, 5.28%)</title><rect x="1024.5" y="533" width="62.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1027.53" y="543.5" >virtua..</text>
</g>
<g >
<title>[unknown] (129,486,577 samples, 5.28%)</title><rect x="1024.5" y="517" width="62.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1027.53" y="527.5" >[unkno..</text>
</g>
<g >
<title>__rmqueue_pcplist (12,440,883 samples, 0.51%)</title><rect x="805.1" y="245" width="6.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="808.06" y="255.5" ></text>
</g>
<g >
<title>AVLMap::insert (1,470,311,843 samples, 60.00%)</title><rect x="80.2" y="469" width="708.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="83.24" y="479.5" >AVLMap::insert</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (12,990,758 samples, 0.53%)</title><rect x="45.3" y="261" width="6.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="48.27" y="271.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (10,187,890 samples, 0.42%)</title><rect x="36.0" y="277" width="4.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="39.04" y="287.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (13,074,295 samples, 0.53%)</title><rect x="655.1" y="229" width="6.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="658.06" y="239.5" ></text>
</g>
<g >
<title>do_anonymous_page (24,868,596 samples, 1.01%)</title><rect x="799.1" y="357" width="12.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="802.08" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (12,440,883 samples, 0.51%)</title><rect x="805.1" y="181" width="6.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="808.06" y="191.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (24,868,596 samples, 1.01%)</title><rect x="799.1" y="453" width="12.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="802.08" y="463.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (9,052,453 samples, 0.37%)</title><rect x="22.5" y="501" width="4.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="25.51" y="511.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (25,980,165 samples, 1.06%)</title><rect x="10.0" y="549" width="12.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>AVLMap::rebalance (25,022,592 samples, 1.02%)</title><rect x="744.1" y="421" width="12.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="747.10" y="431.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (13,074,295 samples, 0.53%)</title><rect x="655.1" y="277" width="6.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="658.06" y="287.5" ></text>
</g>
<g >
<title>ext4_release_file (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="437" width="5.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1089.88" y="447.5" ></text>
</g>
<g >
<title>[[vdso]] (118,595,258 samples, 4.84%)</title><rect x="945.8" y="469" width="57.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="948.77" y="479.5" >[[vdso]]</text>
</g>
<g >
<title>mem_cgroup_commit_charge (9,055,466 samples, 0.37%)</title><rect x="811.1" y="341" width="4.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="814.05" y="351.5" ></text>
</g>
<g >
<title>__GI___writev (51,206,351 samples, 2.09%)</title><rect x="26.9" y="533" width="24.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="29.87" y="543.5" >_..</text>
</g>
<g >
<title>std::unique_ptr&lt;AVLNode, std::default_delete&lt;AVLNode&gt; &gt;::~unique_ptr (124,650,732 samples, 5.09%)</title><rect x="864.6" y="453" width="60.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="867.56" y="463.5" >std::u..</text>
</g>
<g >
<title>ext4_map_blocks (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="277" width="5.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1089.88" y="287.5" ></text>
</g>
<g >
<title>ext4_writepages (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="341" width="5.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1089.88" y="351.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (40,666,183 samples, 1.66%)</title><rect x="1159.3" y="549" width="19.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1162.28" y="559.5" ></text>
</g>
<g >
<title>ext4_alloc_da_blocks (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="421" width="5.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1089.88" y="431.5" ></text>
</g>
<g >
<title>update_curr (13,074,295 samples, 0.53%)</title><rect x="655.1" y="149" width="6.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="658.06" y="159.5" ></text>
</g>
<g >
<title>AVLMap::rebalance (37,384,345 samples, 1.53%)</title><rect x="599.3" y="293" width="18.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="602.32" y="303.5" ></text>
</g>
<g >
<title>BM_Insert_Random (1,813,022,742 samples, 73.99%)</title><rect x="51.5" y="485" width="873.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="54.53" y="495.5" >BM_Insert_Random</text>
</g>
<g >
<title>handle_mm_fault (9,055,466 samples, 0.37%)</title><rect x="811.1" y="421" width="4.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="814.05" y="431.5" ></text>
</g>
<g >
<title>alloc_anon_folio (12,440,883 samples, 0.51%)</title><rect x="805.1" y="341" width="6.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="808.06" y="351.5" ></text>
</g>
<g >
<title>AVLMap::insertNode (1,281,096,108 samples, 52.28%)</title><rect x="127.2" y="405" width="616.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="130.18" y="415.5" >AVLMap::insertNode</text>
</g>
<g >
<title>do_writev (51,206,351 samples, 2.09%)</title><rect x="26.9" y="453" width="24.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="29.87" y="463.5" >d..</text>
</g>
<g >
<title>tick_sched_handle (12,440,883 samples, 0.51%)</title><rect x="805.1" y="101" width="6.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="808.06" y="111.5" ></text>
</g>
<g >
<title>AVLMap::rebalance (22,580,910 samples, 0.92%)</title><rect x="756.1" y="437" width="10.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="759.15" y="447.5" ></text>
</g>
<g >
<title>handle_pte_fault (9,055,466 samples, 0.37%)</title><rect x="811.1" y="389" width="4.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="814.05" y="399.5" ></text>
</g>
<g >
<title>[unknown] (9,052,453 samples, 0.37%)</title><rect x="22.5" y="517" width="4.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="25.51" y="527.5" ></text>
</g>
<g >
<title>get_page_from_freelist (10,187,890 samples, 0.42%)</title><rect x="36.0" y="245" width="4.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="39.04" y="255.5" ></text>
</g>
<g >
<title>save_latencies_to_csv (11,547,935 samples, 0.47%)</title><rect x="815.4" y="469" width="5.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="818.41" y="479.5" ></text>
</g>
<g >
<title>__count_memcg_events (9,055,466 samples, 0.37%)</title><rect x="811.1" y="325" width="4.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="814.05" y="335.5" ></text>
</g>
<g >
<title>task_tick_mm_cid (13,073,007 samples, 0.53%)</title><rect x="617.3" y="165" width="6.3" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="620.32" y="175.5" ></text>
</g>
<g >
<title>do_anonymous_page (9,055,466 samples, 0.37%)</title><rect x="811.1" y="373" width="4.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="814.05" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (10,187,890 samples, 0.42%)</title><rect x="36.0" y="229" width="4.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="39.04" y="239.5" ></text>
</g>
<g >
<title>__fput_sync (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="469" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1089.88" y="479.5" ></text>
</g>
<g >
<title>AVLMap::insertNode (83,078,648 samples, 3.39%)</title><rect x="540.4" y="245" width="40.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="543.43" y="255.5" >AVL..</text>
</g>
<g >
<title>handle_irq_event (9,966,645 samples, 0.41%)</title><rect x="1045.0" y="405" width="4.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1047.98" y="415.5" ></text>
</g>
<g >
<title>do_user_addr_fault (9,055,466 samples, 0.37%)</title><rect x="811.1" y="437" width="4.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="814.05" y="447.5" ></text>
</g>
<g >
<title>do_lookup_x (7,811,136 samples, 0.32%)</title><rect x="1020.8" y="533" width="3.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1023.77" y="543.5" ></text>
</g>
<g >
<title>vfs_writev (51,206,351 samples, 2.09%)</title><rect x="26.9" y="437" width="24.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="29.87" y="447.5" >v..</text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (11,123,059 samples, 0.45%)</title><rect x="1115.9" y="549" width="5.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1118.86" y="559.5" ></text>
</g>
<g >
<title>AVLMap::rebalance (25,644,138 samples, 1.05%)</title><rect x="731.7" y="389" width="12.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="734.75" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (12,440,883 samples, 0.51%)</title><rect x="805.1" y="213" width="6.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="808.06" y="223.5" ></text>
</g>
<g >
<title>common_interrupt (9,966,645 samples, 0.41%)</title><rect x="1045.0" y="453" width="4.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1047.98" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (13,074,295 samples, 0.53%)</title><rect x="655.1" y="293" width="6.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="658.06" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (13,074,295 samples, 0.53%)</title><rect x="655.1" y="245" width="6.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="658.06" y="255.5" ></text>
</g>
<g >
<title>update_process_times (12,990,758 samples, 0.53%)</title><rect x="45.3" y="181" width="6.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="48.27" y="191.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (12,990,758 samples, 0.53%)</title><rect x="45.3" y="229" width="6.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="48.27" y="239.5" ></text>
</g>
<g >
<title>AVLMap::insertNode (13,084,471 samples, 0.53%)</title><rect x="574.1" y="229" width="6.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="577.14" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,377,015 samples, 0.42%)</title><rect x="612.3" y="213" width="5.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="615.32" y="223.5" ></text>
</g>
<g >
<title>AVLMap::rebalance (11,109,843 samples, 0.45%)</title><rect x="726.4" y="373" width="5.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="729.40" y="383.5" ></text>
</g>
<g >
<title>ext4_da_write_end (12,990,758 samples, 0.53%)</title><rect x="45.3" y="357" width="6.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="48.27" y="367.5" ></text>
</g>
<g >
<title>tick_sched_handle (13,073,007 samples, 0.53%)</title><rect x="617.3" y="197" width="6.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="620.32" y="207.5" ></text>
</g>
<g >
<title>AVLMap::insertNode (1,401,316,276 samples, 57.19%)</title><rect x="92.2" y="453" width="674.8" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="95.21" y="463.5" >AVLMap::insertNode</text>
</g>
<g >
<title>tick_nohz_highres_handler (10,377,015 samples, 0.42%)</title><rect x="612.3" y="197" width="5.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="615.32" y="207.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (13,073,007 samples, 0.53%)</title><rect x="617.3" y="261" width="6.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="620.32" y="271.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (37,143,674 samples, 1.52%)</title><rect x="1002.9" y="485" width="17.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1005.88" y="495.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (10,377,015 samples, 0.42%)</title><rect x="612.3" y="181" width="5.0" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="615.32" y="191.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (12,440,883 samples, 0.51%)</title><rect x="805.1" y="165" width="6.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="808.06" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_close (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="485" width="5.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1089.88" y="495.5" ></text>
</g>
<g >
<title>x64_sys_call (51,206,351 samples, 2.09%)</title><rect x="26.9" y="485" width="24.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="29.87" y="495.5" >x..</text>
</g>
<g >
<title>__handle_mm_fault (24,868,596 samples, 1.01%)</title><rect x="799.1" y="389" width="12.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="802.08" y="399.5" ></text>
</g>
<g >
<title>handle_pte_fault (24,868,596 samples, 1.01%)</title><rect x="799.1" y="373" width="12.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="802.08" y="383.5" ></text>
</g>
<g >
<title>blk_cgroup_congested (12,427,713 samples, 0.51%)</title><rect x="799.1" y="325" width="6.0" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="802.08" y="335.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (12,440,883 samples, 0.51%)</title><rect x="805.1" y="37" width="6.0" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="808.06" y="47.5" ></text>
</g>
<g >
<title>AVLMap::insertNode (939,509,866 samples, 38.34%)</title><rect x="239.5" y="341" width="452.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="242.50" y="351.5" >AVLMap::insertNode</text>
</g>
<g >
<title>_raw_spin_lock (10,377,015 samples, 0.42%)</title><rect x="612.3" y="165" width="5.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="615.32" y="175.5" ></text>
</g>
<g >
<title>update_process_times (13,073,007 samples, 0.53%)</title><rect x="617.3" y="181" width="6.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="620.32" y="191.5" ></text>
</g>
<g >
<title>scheduler_tick (12,440,883 samples, 0.51%)</title><rect x="805.1" y="69" width="6.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="808.06" y="79.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (12,440,883 samples, 0.51%)</title><rect x="805.1" y="309" width="6.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="808.06" y="319.5" ></text>
</g>
<g >
<title>alloc_pages (10,187,890 samples, 0.42%)</title><rect x="36.0" y="293" width="4.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="39.04" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (9,055,466 samples, 0.37%)</title><rect x="811.1" y="405" width="4.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="814.05" y="415.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (47,844,442 samples, 1.95%)</title><rect x="821.0" y="469" width="23.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="823.97" y="479.5" >s..</text>
</g>
<g >
<title>AVLMap::rebalance (13,079,277 samples, 0.53%)</title><rect x="580.4" y="261" width="6.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="583.44" y="271.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long long&gt; (129,486,577 samples, 5.28%)</title><rect x="1024.5" y="501" width="62.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1027.53" y="511.5" >std::o..</text>
</g>
<g >
<title>__folio_throttle_swaprate (12,427,713 samples, 0.51%)</title><rect x="799.1" y="341" width="6.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="802.08" y="351.5" ></text>
</g>
<g >
<title>malloc (79,047,267 samples, 3.23%)</title><rect x="1121.2" y="549" width="38.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1124.22" y="559.5" >mal..</text>
</g>
<g >
<title>asm_exc_page_fault (9,055,466 samples, 0.37%)</title><rect x="811.1" y="469" width="4.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="814.05" y="479.5" ></text>
</g>
<g >
<title>tick_sched_handle (13,074,295 samples, 0.53%)</title><rect x="655.1" y="213" width="6.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="658.06" y="223.5" ></text>
</g>
<g >
<title>mpage_map_one_extent (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="293" width="5.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1089.88" y="303.5" ></text>
</g>
<g >
<title>_int_malloc (49,498,223 samples, 2.02%)</title><rect x="1092.0" y="549" width="23.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1095.03" y="559.5" >_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (51,206,351 samples, 2.09%)</title><rect x="26.9" y="517" width="24.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="29.87" y="527.5" >e..</text>
</g>
<g >
<title>intel_gpio_irq (9,966,645 samples, 0.41%)</title><rect x="1045.0" y="373" width="4.8" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1047.98" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (24,868,596 samples, 1.01%)</title><rect x="799.1" y="421" width="12.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="802.08" y="431.5" ></text>
</g>
<g >
<title>AVLMap::insertNode (1,134,830,358 samples, 46.31%)</title><rect x="179.9" y="373" width="546.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="182.92" y="383.5" >AVLMap::insertNode</text>
</g>
<g >
<title>exc_page_fault (24,868,596 samples, 1.01%)</title><rect x="799.1" y="437" width="12.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="802.08" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (12,990,758 samples, 0.53%)</title><rect x="45.3" y="213" width="6.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="48.27" y="223.5" ></text>
</g>
<g >
<title>[unknown] (9,052,453 samples, 0.37%)</title><rect x="22.5" y="533" width="4.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="25.51" y="543.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;long long&gt; (44,412,009 samples, 1.81%)</title><rect x="1065.5" y="485" width="21.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1068.50" y="495.5" >s..</text>
</g>
<g >
<title>__x64_sys_writev (51,206,351 samples, 2.09%)</title><rect x="26.9" y="469" width="24.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="29.87" y="479.5" >_..</text>
</g>
<g >
<title>benchmarks (2,450,418,279 samples, 100.00%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >benchmarks</text>
</g>
<g >
<title>hrtimer_interrupt (13,074,295 samples, 0.53%)</title><rect x="655.1" y="261" width="6.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="658.06" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;AVLNode, std::default_delete&lt;AVLNode&gt; &gt;::~unique_ptr (134,914,928 samples, 5.51%)</title><rect x="859.6" y="469" width="65.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="862.62" y="479.5" >std::un..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,377,015 samples, 0.42%)</title><rect x="612.3" y="261" width="5.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="615.32" y="271.5" ></text>
</g>
<g >
<title>ext4_mb_good_group (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="213" width="5.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1089.88" y="223.5" ></text>
</g>
<g >
<title>AVLMap::rebalance (63,463,877 samples, 2.59%)</title><rect x="661.4" y="325" width="30.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="664.36" y="335.5" >AV..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (36,251,275 samples, 1.48%)</title><rect x="793.6" y="469" width="17.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="796.59" y="479.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (9,966,645 samples, 0.41%)</title><rect x="1045.0" y="389" width="4.8" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1047.98" y="399.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (42,249,352 samples, 1.72%)</title><rect x="31.2" y="421" width="20.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="34.18" y="431.5" ></text>
</g>
<g >
<title>block_write_end (12,990,758 samples, 0.53%)</title><rect x="45.3" y="325" width="6.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="48.27" y="335.5" ></text>
</g>
<g >
<title>benchmark::internal::BenchmarkInstance::Run (2,012,748,511 samples, 82.14%)</title><rect x="51.5" y="501" width="969.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="54.53" y="511.5" >benchmark::internal::BenchmarkInstance::Run</text>
</g>
<g >
<title>asm_common_interrupt (9,966,645 samples, 0.41%)</title><rect x="1045.0" y="469" width="4.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1047.98" y="479.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (8,993,358 samples, 0.37%)</title><rect x="40.9" y="341" width="4.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="43.94" y="351.5" ></text>
</g>
<g >
<title>__close_nocancel (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="549" width="5.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1089.88" y="559.5" ></text>
</g>
<g >
<title>scheduler_tick (13,074,295 samples, 0.53%)</title><rect x="655.1" y="181" width="6.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="658.06" y="191.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (19,181,248 samples, 0.78%)</title><rect x="36.0" y="357" width="9.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="39.04" y="367.5" ></text>
</g>
<g >
<title>AVLMap::rebalance (44,136,237 samples, 1.80%)</title><rect x="767.0" y="453" width="21.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="770.02" y="463.5" >A..</text>
</g>
<g >
<title>do_syscall_64 (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="517" width="5.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1089.88" y="527.5" ></text>
</g>
<g >
<title>AVLMap::insertNode (368,159,258 samples, 15.02%)</title><rect x="409.4" y="277" width="177.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="412.45" y="287.5" >AVLMap::insertNode</text>
</g>
<g >
<title>tick_nohz_highres_handler (13,073,007 samples, 0.53%)</title><rect x="617.3" y="213" width="6.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="620.32" y="223.5" ></text>
</g>
<g >
<title>AVLMap::insertNode (1,203,025,521 samples, 49.09%)</title><rect x="152.4" y="389" width="579.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="155.43" y="399.5" >AVLMap::insertNode</text>
</g>
<g >
<title>mpage_map_and_submit_extent (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="309" width="5.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1089.88" y="319.5" ></text>
</g>
<g >
<title>AVLMap::insertNode (1,036,301,060 samples, 42.29%)</title><rect x="215.7" y="357" width="499.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="218.70" y="367.5" >AVLMap::insertNode</text>
</g>
<g >
<title>__hrtimer_run_queues (13,073,007 samples, 0.53%)</title><rect x="617.3" y="229" width="6.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="620.32" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,074,295 samples, 0.53%)</title><rect x="655.1" y="309" width="6.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="658.06" y="319.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (9,966,645 samples, 0.41%)</title><rect x="1045.0" y="421" width="4.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1047.98" y="431.5" ></text>
</g>
<g >
<title>AVLMap::rebalance (65,302,000 samples, 2.66%)</title><rect x="623.6" y="309" width="31.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="626.61" y="319.5" >AV..</text>
</g>
<g >
<title>cgroup_rstat_updated (9,055,466 samples, 0.37%)</title><rect x="811.1" y="309" width="4.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="814.05" y="319.5" ></text>
</g>
<g >
<title>folio_alloc (10,187,890 samples, 0.42%)</title><rect x="36.0" y="309" width="4.9" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="39.04" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (24,868,596 samples, 1.01%)</title><rect x="799.1" y="405" width="12.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="802.08" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock (8,993,358 samples, 0.37%)</title><rect x="40.9" y="293" width="4.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="43.94" y="303.5" ></text>
</g>
<g >
<title>ext4_get_group_info (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="197" width="5.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1089.88" y="207.5" ></text>
</g>
<g >
<title>ext4_da_do_write_end (12,990,758 samples, 0.53%)</title><rect x="45.3" y="341" width="6.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="48.27" y="351.5" ></text>
</g>
<g >
<title>benchmark::internal::(anonymous namespace)::RunInThread (2,012,748,511 samples, 82.14%)</title><rect x="51.5" y="517" width="969.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="54.53" y="527.5" >benchmark::internal::(anonymous namespace)::RunInThread</text>
</g>
<g >
<title>rmqueue (12,440,883 samples, 0.51%)</title><rect x="805.1" y="261" width="6.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="808.06" y="271.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (9,055,466 samples, 0.37%)</title><rect x="811.1" y="357" width="4.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="814.05" y="367.5" ></text>
</g>
<g >
<title>__filemap_get_folio (10,187,890 samples, 0.42%)</title><rect x="36.0" y="341" width="4.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="39.04" y="351.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (12,854,820 samples, 0.52%)</title><rect x="928.9" y="485" width="6.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="931.93" y="495.5" ></text>
</g>
<g >
<title>update_curr_se (13,074,295 samples, 0.53%)</title><rect x="655.1" y="133" width="6.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="658.06" y="143.5" ></text>
</g>
<g >
<title>generic_perform_write (42,249,352 samples, 1.72%)</title><rect x="31.2" y="373" width="20.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="34.18" y="383.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (8,993,358 samples, 0.37%)</title><rect x="40.9" y="309" width="4.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="43.94" y="319.5" ></text>
</g>
<g >
<title>__alloc_pages (12,440,883 samples, 0.51%)</title><rect x="805.1" y="293" width="6.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="808.06" y="303.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (9,011,541 samples, 0.37%)</title><rect x="1049.8" y="485" width="4.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1052.78" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,073,007 samples, 0.53%)</title><rect x="617.3" y="293" width="6.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="620.32" y="303.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (23,637,263 samples, 0.96%)</title><rect x="1054.1" y="485" width="11.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1057.11" y="495.5" ></text>
</g>
<g >
<title>ext4_mb_new_blocks (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="245" width="5.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1089.88" y="255.5" ></text>
</g>
<g >
<title>task_tick_fair (13,074,295 samples, 0.53%)</title><rect x="655.1" y="165" width="6.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="658.06" y="175.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (10,377,015 samples, 0.42%)</title><rect x="612.3" y="245" width="5.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="615.32" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (51,206,351 samples, 2.09%)</title><rect x="26.9" y="501" width="24.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="29.87" y="511.5" >d..</text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (140,706,968 samples, 5.74%)</title><rect x="935.1" y="485" width="67.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="938.12" y="495.5" >clock_g..</text>
</g>
<g >
<title>AVLMap::insertNode (495,913,326 samples, 20.24%)</title><rect x="360.5" y="293" width="238.8" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="363.51" y="303.5" >AVLMap::insertNode</text>
</g>
<g >
<title>do_writepages (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="357" width="5.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1089.88" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages (10,187,890 samples, 0.42%)</title><rect x="36.0" y="261" width="4.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="39.04" y="271.5" ></text>
</g>
<g >
<title>[unknown] (2,210,305,028 samples, 90.20%)</title><rect x="22.5" y="549" width="1064.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="25.51" y="559.5" >[unknown]</text>
</g>
<g >
<title>filemap_alloc_folio (10,187,890 samples, 0.42%)</title><rect x="36.0" y="325" width="4.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="39.04" y="335.5" ></text>
</g>
<g >
<title>filemap_flush (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="405" width="5.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1089.88" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (12,990,758 samples, 0.53%)</title><rect x="45.3" y="277" width="6.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="48.27" y="287.5" ></text>
</g>
<g >
<title>AVLMap::insertNode (204,188,525 samples, 8.33%)</title><rect x="482.1" y="261" width="98.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="485.11" y="271.5" >AVLMap::ins..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,440,883 samples, 0.51%)</title><rect x="805.1" y="197" width="6.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="808.06" y="207.5" ></text>
</g>
<g >
<title>[[vdso]] (9,020,307 samples, 0.37%)</title><rect x="924.6" y="485" width="4.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="927.59" y="495.5" ></text>
</g>
<g >
<title>malloc@plt (13,049,940 samples, 0.53%)</title><rect x="708.4" y="341" width="6.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="711.44" y="351.5" ></text>
</g>
<g >
<title>ext4_ext_map_blocks (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="261" width="5.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1089.88" y="271.5" ></text>
</g>
<g >
<title>perf_event_task_tick (12,440,883 samples, 0.51%)</title><rect x="805.1" y="53" width="6.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="808.06" y="63.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (13,073,007 samples, 0.53%)</title><rect x="617.3" y="245" width="6.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="620.32" y="255.5" ></text>
</g>
<g >
<title>AVLMap::insertNode (1,378,735,366 samples, 56.27%)</title><rect x="92.2" y="437" width="663.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="95.21" y="447.5" >AVLMap::insertNode</text>
</g>
<g >
<title>update_process_times (13,074,295 samples, 0.53%)</title><rect x="655.1" y="197" width="6.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="658.06" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="533" width="5.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1089.88" y="543.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (12,990,758 samples, 0.53%)</title><rect x="45.3" y="245" width="6.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="48.27" y="255.5" ></text>
</g>
<g >
<title>__fput (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="453" width="5.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1089.88" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,377,015 samples, 0.42%)</title><rect x="612.3" y="277" width="5.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="615.32" y="287.5" ></text>
</g>
<g >
<title>vma_alloc_folio (12,440,883 samples, 0.51%)</title><rect x="805.1" y="325" width="6.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="808.06" y="335.5" ></text>
</g>
<g >
<title>__block_commit_write (12,990,758 samples, 0.53%)</title><rect x="45.3" y="309" width="6.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="48.27" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (13,073,007 samples, 0.53%)</title><rect x="617.3" y="277" width="6.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="620.32" y="287.5" ></text>
</g>
<g >
<title>AVLMap::rebalance (34,317,642 samples, 1.40%)</title><rect x="691.9" y="341" width="16.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="694.92" y="351.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;long long&gt; (9,309,302 samples, 0.38%)</title><rect x="844.0" y="469" width="4.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="847.01" y="479.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (23,106,452 samples, 0.94%)</title><rect x="848.5" y="469" width="11.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="851.50" y="479.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (12,990,758 samples, 0.53%)</title><rect x="45.3" y="133" width="6.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="48.27" y="143.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (8,993,358 samples, 0.37%)</title><rect x="40.9" y="325" width="4.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="43.94" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,990,758 samples, 0.53%)</title><rect x="45.3" y="293" width="6.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="48.27" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (28,078,199 samples, 1.15%)</title><rect x="1036.3" y="485" width="13.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1039.25" y="495.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (42,249,352 samples, 1.72%)</title><rect x="31.2" y="405" width="20.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="34.18" y="415.5" ></text>
</g>
<g >
<title>ext4_do_writepages (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="325" width="5.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1089.88" y="335.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (23,120,190 samples, 0.94%)</title><rect x="1178.9" y="549" width="11.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1181.87" y="559.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (10,264,196 samples, 0.42%)</title><rect x="859.6" y="453" width="5.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="862.62" y="463.5" ></text>
</g>
<g >
<title>__filemap_fdatawrite_range (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="389" width="5.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1089.88" y="399.5" ></text>
</g>
<g >
<title>AVLMap::rebalance (24,234,904 samples, 0.99%)</title><rect x="714.7" y="357" width="11.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="717.73" y="367.5" ></text>
</g>
<g >
<title>filemap_fdatawrite_wbc (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="373" width="5.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1089.88" y="383.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (42,249,352 samples, 1.72%)</title><rect x="31.2" y="389" width="20.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="34.18" y="399.5" ></text>
</g>
<g >
<title>AVLMap::rotateLeft (12,246,005 samples, 0.50%)</title><rect x="702.5" y="325" width="5.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="705.55" y="335.5" ></text>
</g>
<g >
<title>AVLMap::insertNode (1,319,191,378 samples, 53.84%)</title><rect x="108.8" y="421" width="635.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="111.84" y="431.5" >AVLMap::insertNode</text>
</g>
<g >
<title>hrtimer_interrupt (10,377,015 samples, 0.42%)</title><rect x="612.3" y="229" width="5.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="615.32" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (12,440,883 samples, 0.51%)</title><rect x="805.1" y="149" width="6.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="808.06" y="159.5" ></text>
</g>
<g >
<title>exc_page_fault (9,055,466 samples, 0.37%)</title><rect x="811.1" y="453" width="4.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="814.05" y="463.5" ></text>
</g>
<g >
<title>rmqueue_bulk (12,440,883 samples, 0.51%)</title><rect x="805.1" y="229" width="6.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="808.06" y="239.5" ></text>
</g>
<g >
<title>AVLMap::insertNode (671,835,286 samples, 27.42%)</title><rect x="300.1" y="309" width="323.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="303.09" y="319.5" >AVLMap::insertNode</text>
</g>
<g >
<title>__common_interrupt (9,966,645 samples, 0.41%)</title><rect x="1045.0" y="437" width="4.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1047.98" y="447.5" ></text>
</g>
<g >
<title>all (2,450,418,279 samples, 100%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (12,440,883 samples, 0.51%)</title><rect x="805.1" y="117" width="6.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="808.06" y="127.5" ></text>
</g>
<g >
<title>benchmark::internal::BenchmarkRunner::DoNIterations (2,012,748,511 samples, 82.14%)</title><rect x="51.5" y="533" width="969.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="54.53" y="543.5" >benchmark::internal::BenchmarkRunner::DoNIterations</text>
</g>
<g >
<title>scheduler_tick (12,990,758 samples, 0.53%)</title><rect x="45.3" y="165" width="6.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="48.27" y="175.5" ></text>
</g>
<g >
<title>operator delete (26,130,103 samples, 1.07%)</title><rect x="864.6" y="437" width="12.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="867.56" y="447.5" ></text>
</g>
<g >
<title>ext4_mb_regular_allocator (10,678,164 samples, 0.44%)</title><rect x="1086.9" y="229" width="5.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1089.88" y="239.5" ></text>
</g>
<g >
<title>AVLMap::rebalance (26,125,092 samples, 1.07%)</title><rect x="586.7" y="277" width="12.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="589.74" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;AVLNode, std::default_delete&lt;AVLNode&gt; &gt;::~unique_ptr (98,520,629 samples, 4.02%)</title><rect x="877.1" y="437" width="47.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="880.15" y="447.5" >std:..</text>
</g>
<g >
<title>__hrtimer_run_queues (12,440,883 samples, 0.51%)</title><rect x="805.1" y="133" width="6.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="808.06" y="143.5" ></text>
</g>
<g >
<title>get_page_from_freelist (12,440,883 samples, 0.51%)</title><rect x="805.1" y="277" width="6.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="808.06" y="287.5" ></text>
</g>
<g >
<title>AVLMap::rebalance (11,049,869 samples, 0.45%)</title><rect x="788.3" y="469" width="5.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="791.27" y="479.5" ></text>
</g>
<g >
<title>tick_sched_handle (12,990,758 samples, 0.53%)</title><rect x="45.3" y="197" width="6.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="48.27" y="207.5" ></text>
</g>
<g >
<title>AVLMap::insertNode (776,310,582 samples, 31.68%)</title><rect x="287.5" y="325" width="373.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="290.52" y="335.5" >AVLMap::insertNode</text>
</g>
<g >
<title>trigger_load_balance (12,990,758 samples, 0.53%)</title><rect x="45.3" y="149" width="6.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="48.27" y="159.5" ></text>
</g>
</g>
</svg>
